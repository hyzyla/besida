version: "3.9"


services:

  # == python process ==
  _base: &base
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    environment: &base-environment
      ENVIRONMENT: local
      DATABASE_URL: postgresql://postgres:postgres@db:5432/besida
      SESSION_SECRET_KEY: secret
      BASE_URL: http://localhost:3000/
    env_file:
      - .env

  app: &app
    <<: *base
    ports:
      - "8010:8010"
    entrypoint: ["scripts/start.sh"]
    depends_on:
      - db

  # Service for debugging in Pycharm. Main difference from the `app` service is
  # that entrypoint is empty, because Pycharm will be responsible for starting
  # FastAPI server
  python:
    <<: *app
    entrypoint: []


  # == app database ==
  db:
    image: postgres:11-alpine
    ports:
      - "5439:5432"
    environment: &db-environment
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: besida
      POSTGRES_PORT: 5432
    volumes:
      # persist database data between restarts
      - pgdata:/var/lib/postgresql/data

  # database for tests, available by URL:
  #  - postgres:postgres@db-test:5432/besida - in docker container
  db-test:
    image: postgres:11-alpine
    environment:
      <<: *db-environment


  # == tools ==
  alembic:
    <<: *base
    depends_on:
      - db
    entrypoint: ["alembic"]

  alembic-autogenerate:
    <<: *base
    depends_on:
      - db
    entrypoint: ["alembic", "revision", "--autogenerate", "-m"]

  test:
    <<: *base
    environment:
      <<: *base-environment
      POSTGRES_HOST: db-test
    entrypoint: ["scripts/test.sh"]
    depends_on:
      - db-test

  pip-compile:
    <<: *base
    entrypoint: ["pip-compile", "requirements.in"]

  mypy:
    <<: *base
    entrypoint: ["mypy", "app"]

  black:
    <<: *base
    entrypoint: ["black", "app", "tests"]

  flake8:
    <<: *base
    entrypoint: ["flake8", "app", "tests"]

  isort:
    <<: *base
    entrypoint: ["isort", "app", "tests"]


  # == ory: kratos ==
  kratos-base: &kratos-db
    image: oryd/kratos:v0.9.0-alpha.3
    volumes:
      - ./ory/kratos/:/etc/config/
    depends_on:
      - kratos-db

  kratos:
    <<: *kratos-db
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    command: serve -c /etc/config/kratos.yaml --dev --watch-courier
    depends_on:
      - kratos-db
      - kratos-migrate
      - maildev

  kratos-migrate:
    <<: *kratos-db
    command: -c /etc/config/kratos.yaml migrate sql -e --yes

  kratos-db:
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: kratos
      POSTGRES_PORT: 5432


  # == different services ==
  maildev:
    image: maildev/maildev:1.1.1
    ports:
      - "1080:1080"  # web interface
      - "1025:1025"  # smtp


volumes:
  pgdata:
